buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
  }

  dependencies {
    classpath "org.elasticsearch.gradle:build-tools:${elasticsearchVersion}"
  }
}

plugins {
  id "co.riiid.gradle" version "0.4.2"
}

group = 'org.elasticsearch.plugin.ingest'
version = "${elasticsearchVersion}"

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'elasticsearch.esplugin'
apply plugin: 'elasticsearch.yaml-rest-test'

// license of this project
licenseFile = rootProject.file('LICENSE.txt')
// copyright notices
noticeFile = rootProject.file('NOTICE.txt')

esplugin {
  name 'ingest-anonymize'
  description 'Anonymize field using by replacing values with a consistent hash.'
  classname 'org.elasticsearch.plugin.ingest.anonymize.IngestAnonymizePlugin'
  // license of the plugin, may be different than the above license
  licenseFile rootProject.file('LICENSE.txt')
  // copyright notices, may be different than the above notice
  noticeFile rootProject.file('NOTICE.txt')
}

// In this section you declare the dependencies for your production and test code
// Note, the two dependencies are not really needed as the buildscript dependency gets them in already
// they are just here as an example
dependencies {
  compile "org.elasticsearch:elasticsearch:${elasticsearchVersion}"

  // the yaml tests require a log4j2 dependency, otherwise a dependency is thrown on startup
  yamlRestTestImplementation 'org.apache.logging.log4j:log4j-core:2.11.1'
}

githubRelease.doFirst {
  if (!System.getProperty('GITHUB_TOKEN', '')) {
    throw new Exception('Missing property GITHUB_TOKEN')
  }

  // check if zip file is there
  assert file("build/distributions/ingest-anonymize-${elasticsearchVersion}.zip").exists()

  // configuration
  github {
    owner = 'sektorcap'
    repo = 'ingest-anonymize'
    token = System.getProperty('GITHUB_TOKEN')
    tagName = "${elasticsearchVersion}"
    assets = [ "build/distributions/ingest-anonymize-${elasticsearchVersion}.zip" ]
  }
}

// disable validation of pom creation, only needed for sonatype uploads
validateNebulaPom.enabled = false

// disable Javadoc tasks
tasks.withType(Javadoc).all { enabled = false }

// ignore javadoc linting errors for now
tasks.withType(Javadoc) {
  options.addStringOption('Xdoclint:none', '-quiet')
}
